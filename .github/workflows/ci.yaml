name: CI Build, Test and Push

on:
    push:
        branches:
            - main

jobs:
    codeql-scan:
        permissions:
            contents: read
            security-events: write
            actions: read
            pull-requests: read

        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                languages: 'javascript'

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
    
    
    snyk-check:
        runs-on: ubuntu-latest
        permissions:
            contents: write
        defaults:
            run:
                working-directory: ./app
        steps:
              
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: NPM install
              run: npm install

            - uses: snyk/actions/setup@master
            - name: Snyk test
              run: snyk test
              env:
                SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
              
    
    dockerlint:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - uses: hadolint/hadolint-action@v3.1.0
              with:
                dockerfile: app/Dockerfile

    ecrscanandpush:
      runs-on: ubuntu-latest
      needs: [codeql-scan, snyk-check, dockerlint]
      steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        
      
        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ secrets.AWS_REGION }}

        - name: Login to Amazon ECR Private
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2

        - name: Build, tag the image 
          id: build-image
          run: docker build -t ${{ steps.login-ecr.outputs.registry }}/${{ vars.REPOSITORY }}:latest ./app

        - name: Scan image
          id: trivyscan
          uses: aquasecurity/trivy-action@0.28.0
          with:
            image-ref: ${{ steps.login-ecr.outputs.registry }}/${{ vars.REPOSITORY }}:latest
            format: table
            exit-code: 1
            ignore-unfixed: true
            vuln-type: os,library
            severity: CRITICAL
        
        - name: Push image to Amazon ECR
          run: docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG